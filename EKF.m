%动态仿真实验结果
%无人机在实际飞行过程中姿态角会不断改变，所以仿真过程中使无人机的姿态角，角速度随机游走
%即每次循环对 4 维输入 u1，u2，u3，u4随机赋值

%俯仰角、俯仰角速度、横滚角、横滚角速度、偏航角、偏航角速度
%状态量：X = [x, vx, y, vy, z, vz]
%控制量：U = [u1, u2, u3, u4]        u2,u3,u4:无人机在坐标系{B}三个轴上的升力矩分量[廖坤男公式(2-22)(2-27)]

%正态分布的随机变量通过非线性系统后就不再是正态的了

close all;
clear all;

%常系数
L= 0.3875;      %无人机质心到电机转轴的距离 单位(m) 
Ix = 0.05887;   %绕机体坐标系三个轴的转动惯量 单位(kg・m^2) 
Iy = 0.05887;
Iz = 0.13151;
g = 9.81;       %重力加速度 单位(N/kg)

%动力学方程的常系数
a1 = -(Iy - Iz)/Ix;
a2 = -(Iz - Ix)/Iy;
a3 = -(Ix - Iy)/Iz;  
b1 = L/Ix;
b2 = L/Iy;
b3 = 1/Iz;

Ts = 0.1;               %采样时间
t = 5;                  %仿真时间
len = fix(t/Ts);        %仿真步数 50
n = 6;                  %状态维度
w = 0.1;                %过程标准差 状态转移方程的w                                     这几个参数？？？
v = 0.5;                %测量标准差 观测方程的v
Q = w^2*eye(n);         %过程方差
R = v^2;                %测量值的方差

h=@(x)[x(2);x(4);x(6)];   %量测方程 角速度值可以测得                              h是个函数啊
s=[1;2;3;3;2;1];          %真实初始状态
x=s+w*randn(6,1);         %初始化状态（已经有扰动了）                                        [0.929;1.991;3.020;2.943;1.946;1.064]
P = eye(6);               %初始化协方差矩阵 eye返回的是单位矩阵
xV = zeros(6,len);        %EKF估计值 zeros返回一个 6×len 的全零矩阵
sV = zeros(6,len);        %真实值
zV = zeros(3,len);        %测量值

for k=1:len            %len = 50
  %随机赋值控制量
  u1 = 0.1*randn(1,1);                                                          %没有用到这个
  u2 = 0.1*randn(1,1); %randn正态分布的随机数
  u3 = 0.1*randn(1,1);
  u4 = 0.1*randn(1,1);
  
  z = h(s) + v*randn;  %h(s)就是s矩阵的2,4,6号元素，因为角速度可以测量得到   v*randn表示传感器是个垃圾，测不准          2.7 3.7 1.7           
  sV(:,k)= s;          %实际状态
  zV(:,k) = z;         %状态测量值  实际角速度然后添加了噪声
  
  %状态方程                                                                                     动力学 运动学？
  f=@(x)[x(1)+Ts*x(2);
           (a1*x(4)*x(6) +b1*u2)*Ts+x(2);                                       % a1 = -(Iy - Iz)/Ix;  b1 = L/Ix;
           x(3)+Ts*x(4);
           (a2*x(2)*x(6) +b2*u3)*Ts+x(4);                                           % a2 = -(Iz - Ix)/Iy;  b2 = L/Iy;
           x(5)+Ts*x(6);
           (a3*x(2)*x(4) +b3*u4)*Ts+x(6);];                                     % a3 = -(Ix - Iy)/Iz;   b3 = 1/Iz;
  
  %1预测、一步预测，同时计算f方程组在x点的雅可比矩阵A 
  [x1,A]=jaccsd(f,x);   %x1是预测公式1
  
  %2预测、过程方差预测
  P=A*P*A'+Q;           %预测公式2 
  
  %状态预测，同时计算h的雅可比矩阵H
  [z1,H]=jaccsd(h,x1);  %z1？？？3*1阶矩阵   z1是中间变量z1=h(x,0),出自更新2,也是量测方程中的h(x)
  
  %1更新、计算卡尔曼增益
  K=P*H'/(H*P*H'+R);    %word矫正公式1
  
  %2更新、状态EKF估计值
  x=x1+K*(z-z1);        %矫正公式2
  
  %3更新、协方差更新
  P=P-K*H*P;            %矫正公式3 P是为了下一次做准备 6*6
  
  xV(:,k) = x;          %每一次循环xV加一列
  
  %更新真实状态
  s = f(s) + w*randn(6,1);  %[俯仰角、俯仰角速度、横滚角、横滚角速度、偏航角、偏航角速度]加一个正态分布的噪声
end

%俯仰角、横滚角、偏航角度值
for k=1:2:5                           %从1到5，每次增加2
  figure(); hold on; 
  plot(sV(k,:),'-.','linewidth',1);   %画出真实值 蓝线
  plot(xV(k,:),'linewidth',1)         %画出最优估计值 红线
  plot(abs(sV(k,:)-xV(k,:)),':','linewidth',1);     %画出误差值 黄线
  legend('真实状态', 'EKF最优估计估计值', '误差值');
end

%俯仰角速度、横滚角速度、偏航角速度
for k=2:2:6
  figure(); hold on; 
  plot(sV(k,:),'-.','linewidth',1);   %画出真实值 蓝线
  plot(xV(k,:),'linewidth',1)         %画出最优估计值 红线
  plot(zV(k/2,:),':','linewidth',1);  %画出状态测量值 黄线
  plot(abs(sV(k,:)-xV(k,:)), '--','linewidth',1);     %画出误差值 紫线
  legend('真实状态', 'EKF最优估计估计值', '状态测量值', '误差值');
end

